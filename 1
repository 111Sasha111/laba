#include <iostream>//библиотека ввода-вывода
#include <cstdlib>//библиотека для работы с памятью

using namespace std;//использование пространства имен стандартной библиотеки
int main(){//главная функция
    int m, n;//Объявление переменных, которые будут хранить количество строк и столбцов матрицы
    cout<<"Enter the number of rows and columns: ";//вывод сообщения пользователю
    cin>>m>>n;//Считывание значения переменных m и n с помощью оператора ввода

    int **matrix=(int**)malloc(m*sizeof(int*));//Создание двумерного динамического массива размером m на n элементов. malloc() выделяет память для указателей на целые числа размером m.
    for(int i=0; i<m; i++)//Цикл, который пройдется по всем строкам матрицы.
        matrix[i]=(int*)malloc(n*sizeof(int));//выделение памяти для каждого указателя на целое число типа int в каждой строке матрицы. malloc() выделяет память для n элементов типа int в каждой строке.

    cout<<"Enter the elements of matrix: "<<endl;//вывод сообщения пользователю
    for(int i=0; i<m; i++){//Цикл, который пройдется по всем строкам матрицы.
        for(int j=0; j<n; j++){//Цикл, который пройдется по всем столбцам матрицы.
            cin>>matrix[i][j];//Считывание значения элемента матрицы с помощью оператора ввода
        }
    }

    cout<<"Matrix is: "<<endl;//вывод сообщения пользователю
    for(int i=0; i<m; i++){//Цикл, который пройдется по всем строкам матрицы.
        for(int j=0; j<n; j++){//Цикл, который пройдется по всем столбцам матрицы.
            cout<<matrix[i][j]<<" ";//вывод сообщения пользователю
        }
        cout<<endl;//Перевод строки
    }

    for(int i=0; i<m; i++){//Цикл, который пройдется по всем строкам матрицы.
        free(matrix[i]);//Освобождение памяти, выделенной для каждой строки матрицы с помощью malloc()
    }
    free(matrix);//Освобождение памяти, выделенной для указателей на строки матрицы с помощью malloc()
    return 0;//успешное завершение программы с кодом 0
}
